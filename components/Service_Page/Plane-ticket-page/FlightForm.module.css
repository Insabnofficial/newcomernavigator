.tripType_wrapper {
  display: flex;
  align-items: center;
  justify-content: start;
  flex-wrap: wrap;
}

.tripType_wrapper > div:first-child {
  padding-right: 10px;
}

.tripType_wrapper > div:last-child {
  padding-left: 10px;
}

.tripType {
  display: flex;
  gap: 1rem;
  align-items: center;
  justify-content: center;
}

.tripType > label {
  font-size: calc(var(--font-size));
  font-weight: 700;
  cursor: pointer;
  padding: 10px 0px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.tripType > label > input {
  margin-right: 5px;
  cursor: pointer;
}

.tripType::after {
  content: "";
  position: absolute;
  width: 1px;
  height: 60%;
  right: 0;
  top: 50%;
  transform: translate(0, -50%);
  background-color: rgb(201, 201, 201);
  -webkit-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  -o-transform: translate(0, -50%);
}

.form {
  margin-top: 20px;
}

.form > form {
  display: grid;
  grid-template-columns: 1fr 3fr 1fr 1fr;
  grid-gap: 1rem;
  grid-auto-flow: row dense;
  grid-auto-rows: minmax(min-content, max-content);
  grid-gap: 20px 15px;
}

.locations {
  display: flex;
  gap: 1rem;
  position: relative;
  flex: 1;
  width: 100%;
}

.from,
.to {
  position: relative;
  display: flex;
  align-items: center;
  justify-self: center;
  width: 100%;
  min-width: 200px;
}

.from > input,
.to > input {
  outline: none;
  padding: 0 15px 0 35px;
  width: 100%;
  height: 80px;
  font-weight: 500;
  font-size: calc(var(--font-size) * 1.1);
  border: 1px solid gray;
  border-radius: 7px;
  -webkit-border-radius: 7px;
  -moz-border-radius: 7px;
  -ms-border-radius: 7px;
  -o-border-radius: 7px;
}

.from > input:focus,
.to > input:focus {
  border: 1px solid var(--primary-color);
  cursor: default;
}

.location {
  box-sizing: border-box;
  position: absolute;
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 5px solid gray;
  border-radius: 100%;
  pointer-events: none;
  z-index: 2;
  left: 13px;
  top: 50%;
  transform: translate(0, -65%);
  -webkit-transform: translate(0, -65%);
  -moz-transform: translate(0, -65%);
  -ms-transform: translate(0, -65%);
  -o-transform: translate(0, -65%);
}

.location::after {
  position: absolute;
  top: 100%;
  left: 50%;
  margin: 1px 0 0 -6px;
  display: block;
  content: "";
  border: 6px solid transparent;
  border-top: 10px solid gray;
  border-bottom: none;
  pointer-events: none;
}

.swapValue {
  width: 40px;
  height: 40px;
  background-color: white;
  border: 1px solid gray;
  display: flex;
  align-items: center;
  cursor: pointer;
  justify-content: center;
  user-select: none;
  border-radius: 100%;
  -webkit-border-radius: 100%;
  -moz-border-radius: 100%;
  -ms-border-radius: 100%;
  -o-border-radius: 100%;
  position: absolute;
  z-index: 9;
  left: 50%;
  top: 50%;
  transform-origin: center center;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%);
  -moz-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  -o-transform: translate(-50%, -50%);
}

.swapValue > span {
  font-size: 35px;
  position: absolute;
  top: 50%;
  transform: translate(0, -60%);
  -webkit-transform: translate(0, -60%);
  -moz-transform: translate(0, -60%);
  -ms-transform: translate(0, -60%);
  -o-transform: translate(0, -60%);
}

.button {
  width: 100%;
  height: 80px;
  padding: 10px 0;
  font-size: var(--font-size);
  background-color: var(--accent-color);
  opacity: 0.8;
  cursor: pointer;
  color: whitesmoke;
  font-weight: 600;
  outline: none;
  border: none;
  border-radius: 7px;
  -webkit-border-radius: 7px;
  -moz-border-radius: 7px;
  -ms-border-radius: 7px;
  -o-border-radius: 7px;
}

.button:hover {
  opacity: 1;
  background-color: var(--accent-color);
  transition: all var(--transition-speed) var(--cubic-bezzier);
  -webkit-transition: all var(--transition-speed) var(--cubic-bezzier);
  -moz-transition: all var(--transition-speed) var(--cubic-bezzier);
  -ms-transition: all var(--transition-speed) var(--cubic-bezzier);
  -o-transition: all var(--transition-speed) var(--cubic-bezzier);
}

@media screen and (max-width: 768px) {
  .locations,
  .form > form > div {
    flex-direction: column;
  }
}

@media screen and (max-width: 1128px) {
  .form > form {
    grid-template-columns: 1fr;
  }
}
